// Generated by CoffeeScript 2.0.0-beta4
var closePopup, drawChartDataDonut, drawChartDataRequestHistory, drawChartDataUsersHistory, ee, masonryResize, openPopup;
drawChartDataDonut = function (e) {
  var chart, data, options;
  data = google.visualization.arrayToDataTable([
    [
      'Task',
      'Requests'
    ],
    [
      'Valid',
      e.detail.ValidRequests
    ],
    [
      'Invalid',
      e.detail.InvalidRequests
    ],
    [
      'Pending',
      e.detail.IssuedRequests
    ]
  ]);
  options = {
    title: 'Request types',
    pieHole: .4
  };
  chart = new google.visualization.PieChart(document.getElementById('donutChart'));
  return chart.draw(data, options);
};
drawChartDataRequestHistory = function (e) {
  var chart, data, options;
  data = google.visualization.arrayToDataTable(eval_(e.detail));
  console.log(data);
  options = { title: 'Requests' };
  chart = new google.visualization.LineChart(document.getElementById('requestHistoryChart'));
  return chart.draw(data, options);
};
drawChartDataUsersHistory = function (e) {
  var chart, data, options;
  data = google.visualization.arrayToDataTable(eval_(e.detail));
  console.log(data);
  options = { title: 'Users' };
  chart = new google.visualization.LineChart(document.getElementById('usersHistoryChart'));
  return chart.draw(data, options);
};
google.load('visualization', '1', { packages: ['corechart'] });
window.addEventListener('drawChartDataDonut', drawChartDataDonut, false);
window.addEventListener('drawChartDataRequestHistory', drawChartDataRequestHistory, false);
window.addEventListener('drawChartDataUsersHistory', drawChartDataUsersHistory, false);
ee = new EventEmitter;
window.addEventListener('ee', ee, false);
$(document).on('DOMMouseScroll mousewheel', '#list', function (ev) {
  var $this, delta, height, prevent, scrollHeight, scrollTop, up;
  $this = $(this);
  scrollTop = this.scrollTop;
  scrollHeight = this.scrollHeight;
  height = $this.height();
  delta = ev.type === 'DOMMouseScroll' ? ev.originalEvent.detail * -40 : ev.originalEvent.wheelDelta;
  up = delta > 0;
  prevent = function () {
    ev.stopPropagation();
    ev.preventDefault();
    ev.returnValue = false;
    return false;
  };
  if (!up && -delta > scrollHeight - height - scrollTop) {
    $this.scrollTop(scrollHeight);
    return prevent();
  } else if (up && delta > scrollTop) {
    $this.scrollTop(0);
    return prevent();
  }
});
masonryResize = function (e) {
  var cardWidth, eachCard, eachCardFlippingContent, eachCardFrontBack;
  eachCard = $('#cards-container .card');
  eachCardFlippingContent = $('#cards-container .card .front, #cards-container .card .back, #cards-container .card');
  eachCardFrontBack = $('#cards-container .card .front, #cards-container .card .back');
  cardWidth = eachCard.width();
  eachCardFlippingContent.height(cardWidth);
  return eachCardFrontBack.width(cardWidth);
};
window.addEventListener('resizeend', masonryResize, false);
$(document).ready(function () {
  var radiobutton, secret, webtoggle;
  secret = $('.toggle-secret');
  secret.click(function () {
    $('.secret').toggle();
    if (secret.html() === 'show') {
      return secret.html('hide');
    } else {
      return secret.html('show');
    }
  });
  webtoggle = $('#popup-new-integration .web-toggle');
  radiobutton = $('#popup-new-integration input[type=radio]');
  radiobutton.click(function (e) {
    var value;
    value = $(e.currentTarget).val();
    if (value === 'web') {
      return webtoggle.slideDown();
    } else {
      return webtoggle.slideUp();
    }
  });
  $('#cards-container').masonry({
    itemSelector: '.card',
    gutter: '.grid-gutter'
  });
  $('#cards-container .front').click(function () {
    $(this).parent('.flipper').toggleClass('flipped');
    return $(this).siblings('.back').css('z-index', '3');
  });
  $('#cards-container .flip').click(function () {
    return $(this).closest('.flipper').toggleClass('flipped');
  });
  if ($('#sidebar .menu').length)
    enquire.register('(min-width: 769px)', {
      match: function () {
        $('#sidebar .menu').collapse('show');
        return false;
      },
      unmatch: function () {
        $('#sidebar .menu').collapse('hide');
        return false;
      }
    }, true);
  return $('.white-popup .popup-form, #login').submit(function () {
    $('input[type=submit], button[type=submit]', this).attr('disabled', 'disabled');
    return false;
  });
});
openPopup = function (e) {
  $.magnificPopup.open({
    items: {
      src: e.detail.content,
      type: 'inline'
    }
  });
  return false;
};
closePopup = function () {
  $.magnificPopup.close();
  return false;
};
window.addEventListener('openPopup', openPopup, false);
window.addEventListener('closePopup', closePopup, false);